extract = 'total_dyn_inst: (\d+)'
benchmarks = '../bril/benchmarks/core/*.bril'

# [runs.baseline]
# pipeline = [
#     "bril2json",
#     "brili -p {args}",
# ]

# [runs.tdce]
# pipeline = [
#     "bril2json",
#     "python3 ../bril/examples/tdce.py tdce+",
#     "brili -p {args}",
# ]

# [runs.lvn]
# pipeline = [
#     "bril2json",
#     "python3 ../bril/examples/lvn.py -p -c -f",
#     "python3 ../bril/examples/tdce.py tdce+",
#     "brili -p {args}",
# ]

# baseline for no optimization
[runs.baseline]
pipeline = [
    "bril2json",
    "brili -p {args}",
]

# test structure In/Out is correct, with no optimization
[runs.hw2p1_s0]
pipeline = [
    "bril2json",
    "python3 tdce.py",
    "brili -p {args}",
]

# baseline for tdce
[runs.org_tdce]
pipeline = [
    "bril2json",
    "python3 ../bril/examples/tdce.py tdce",
    "brili -p {args}",
]

# test simple optimization
[runs.hw2p1_s1]
pipeline = [
    "bril2json",
    "python3 tdce.py tdce",
    "brili -p {args}",
]

# baseline for dkp
[runs.org_dkp_]
pipeline = [
    "bril2json",
    "python3 ../bril/examples/tdce.py dkp",
    "brili -p {args}",
]

[runs.hw2p1_s2]
pipeline = [
    "bril2json",
    "python3 tdce.py raby",
    "brili -p {args}",
]

# baseline for tdce
[runs.org_tdcp]
pipeline = [
    "bril2json",
    "python3 ../bril/examples/tdce.py tdce+",
    "brili -p {args}",
]

[runs.hw2p1_s3]
pipeline = [
    "bril2json",
    "python3 tdce.py tdce+",
    "brili -p {args}",
]
