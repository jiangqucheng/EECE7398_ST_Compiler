BrilScript ::	loopcond.bril <1 func> @ example/official_dom_check

================ BrilFunction ::  main (  ) -> None: <22 instr> ================
---------------------------------- Dom-Front -----------------------------------
ENTRY  : 
entry  : 
loop   : loop
body   : loop
then   : endif
endif  : loop
exit   : 
RETURN : 
-------------------------------- Dom & Dom-Tree --------------------------------
ENTRY  <- [ROOT] : ENTRY
entry  <- ENTRY  : ENTRY, entry
loop   <- entry  : ENTRY, entry, loop
body   <- loop   : ENTRY, body, entry, loop
then   <- body   : ENTRY, body, entry, loop, then
endif  <- body   : ENTRY, body, endif, entry, loop
exit   <- loop   : ENTRY, entry, exit, loop
RETURN <- exit   : ENTRY, entry, exit, loop, RETURN
------------------------------------ Script ------------------------------------
.ENTRY:
.entry:
  x: int = const 0;
  i: int = const 0;
  one: int = const 1;
.loop:
  max: int = const 10;
  cond: bool = lt i max;
  br cond .body .exit;
.body:
  mid: int = const 5;
  cond: bool = lt i mid;
  br cond .then .endif;
.then:
  x: int = add x one;
  jmp  .endif;
.endif:
  factor: int = const 2;
  x: int = mul x factor;
  i: int = add i one;
  jmp  .loop;
.exit:
  print x;
.RETURN:

output/official_dom_check/loopcond/loopcond.bril.cfg.gv.pdf
output/official_dom_check/loopcond/loopcond.bril.domt.gv.pdf
